---
// Página de la aplicación web - redirige al módulo web
const title = "Ciudad Activa - App Web";
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#3B82F6">
  
  <link rel="stylesheet" href="/src/styles/global.css">
  <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
  
  <style>
    .loader {
      border: 4px solid #f3f4f6;
      border-top: 4px solid #3B82F6;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>

<body class="bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen flex items-center justify-center">
  <div class="max-w-md mx-auto text-center p-8">
    <!-- Logo -->
    <div class="w-20 h-20 bg-gradient-to-br from-blue-600 to-blue-700 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-xl">
      <i data-lucide="map-pin" class="w-10 h-10 text-white"></i>
    </div>
    
    <!-- Título -->
    <h1 class="text-2xl font-bold text-gray-900 mb-4">Ciudad Activa</h1>
    <p class="text-gray-600 mb-8">Cargando la aplicación web...</p>
    
    <!-- Loader -->
    <div class="loader mx-auto mb-8"></div>
    
    <!-- Información -->
    <div class="bg-white rounded-2xl p-6 shadow-lg mb-6">
      <div class="flex items-center gap-3 mb-4">
        <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
          <i data-lucide="smartphone" class="w-4 h-4 text-blue-600"></i>
        </div>
        <h3 class="font-semibold text-gray-800">Optimizado para móvil</h3>
      </div>
      <p class="text-sm text-gray-600">
        La aplicación está optimizada para uso en dispositivos móviles con todas las funcionalidades de reportes y seguimiento.
      </p>
    </div>
    
    <!-- Botón manual -->
    <div class="text-center">
      <p class="text-sm text-gray-500 mb-4">¿No carga automáticamente?</p>
      <button 
        onclick="redirectToApp()" 
        class="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-all duration-300 flex items-center gap-2 mx-auto"
      >
        <i data-lucide="external-link" class="w-4 h-4"></i>
        Abrir manualmente
      </button>
    </div>
  </div>

  <script>
    lucide.createIcons();
    
    function redirectToApp() {
      // En producción, esto debería apuntar al puerto correcto del módulo web
      const webAppUrl = 'http://localhost:5173'; // Puerto típico de Vite
      
      // Intentar detectar si estamos en desarrollo o producción
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        // Desarrollo - intentar diferentes puertos comunes
        const possiblePorts = [5173, 3000, 3001, 4173, 8080];
        let foundPort = false;
        
        // Función para probar puertos
        const tryPort = async (port) => {
          try {
            const response = await fetch(`http://localhost:${port}`, { 
              mode: 'no-cors',
              timeout: 1000 
            });
            return true;
          } catch {
            return false;
          }
        };
        
        // Intentar puertos uno por uno
        const checkPorts = async () => {
          for (const port of possiblePorts) {
            try {
              const img = new Image();
              img.onload = () => {
                window.location.href = `http://localhost:${port}`;
                foundPort = true;
              };
              img.onerror = () => {
                // Puerto no disponible, continuar
              };
              img.src = `http://localhost:${port}/favicon.ico?t=${Date.now()}`;
              
              // Esperar un poco antes de probar el siguiente puerto
              await new Promise(resolve => setTimeout(resolve, 500));
              
              if (foundPort) break;
            } catch (error) {
              console.log(`Puerto ${port} no disponible`);
            }
          }
          
          // Si no encuentra ningún puerto, mostrar instrucciones
          if (!foundPort) {
            setTimeout(showDevelopmentInstructions, 1000);
          }
        };
        
        checkPorts();
        
      } else {
        // Producción - apuntar a la URL de producción
        window.location.href = '/web-app'; // Ajustar según la configuración de producción
      }
    }
    
    function showDevelopmentInstructions() {
      document.body.innerHTML = `
        <div class="max-w-md mx-auto text-center p-8">
          <div class="w-20 h-20 bg-gradient-to-br from-yellow-500 to-orange-600 rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-xl">
            <i data-lucide="alert-triangle" class="w-10 h-10 text-white"></i>
          </div>
          <h1 class="text-2xl font-bold text-gray-900 mb-4">Aplicación en desarrollo</h1>
          <div class="bg-yellow-50 border border-yellow-200 rounded-2xl p-6 mb-6">
            <h3 class="font-semibold text-yellow-800 mb-2">Para desarrolladores:</h3>
            <p class="text-sm text-yellow-700 mb-4">
              Para ejecutar la aplicación web, ejecuta estos comandos:
            </p>
            <div class="bg-gray-900 text-green-400 p-3 rounded-lg text-left text-sm font-mono">
              <div>cd apps/web</div>
              <div>npm run dev</div>
            </div>
            <p class="text-xs text-yellow-600 mt-2">
              La aplicación estará disponible en http://localhost:5173
            </p>
          </div>
          <div class="flex gap-3">
            <button onclick="location.href='/'" class="flex-1 bg-blue-600 text-white px-4 py-3 rounded-xl font-semibold">
              Volver al inicio
            </button>
            <button onclick="location.reload()" class="flex-1 border border-gray-300 text-gray-700 px-4 py-3 rounded-xl font-semibold">
              Reintentar
            </button>
          </div>
        </div>
      `;
      lucide.createIcons();
    }
    
    // Intentar redirección automática después de 2 segundos
    setTimeout(redirectToApp, 2000);
    
    // Detectar si viene desde la PWA
    const urlParams = new URLSearchParams(window.location.search);
    const action = urlParams.get('action');
    
    if (action === 'new-report') {
      // Si viene desde el shortcut de nuevo reporte, pasar ese parámetro
      sessionStorage.setItem('autoAction', 'new-report');
    }
  </script>
</body>
</html>
